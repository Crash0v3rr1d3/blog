---
import { LINKS } from "../lib/constants";

interface Props {
  title: string;
  description: string;
  page?: "news" | "blog" | "writeups";
  slug?: string | undefined;
  pubDate?: string;
  titleImage?: string;
}

const { title, description, page, slug, pubDate, titleImage } = Astro.props;
const image =
  page === "travel"
    ? `${Astro.url.origin}/globe_preview.webp`
    : `${Astro.url.origin}/og-image.png`;

const schema =
  page !== "blog"
    ? {
        "@context": "http://schema.org",
        "@type": "Person",
        name: "Crash0v3rr1d3",
        url: Astro.url.origin,
        sameAs: [LINKS.linkedin, LINKS.github],
        image: `${Astro.url.origin}/og-image.png`,
        jobTitle: "Hacker | Security Researcher | CxO Advisor",
        worksFor: {
          "@type": "Organization",
          name: "Zscaler",
          address: {
            "@type": "PostalAddress",
            addressLocality: "Spain",
            addressCountry: "SP",
          },
        },
        nationality: {
          "@type": "Country",
          name: "Spain",
        },
      }
    : {
        "@context": "http://schema.org",
        "@type": "BlogPosting",
        mainEntityOfPage: {
          "@type": "WebPage",
          "@id": `${Astro.url.origin}/blog/${slug}`,
        },
        headline: title,
        description: description,
        image: `${Astro.url.origin}/og-image.png`, //TODO: dynamic
        author: {
          "@type": "Person",
          name: "Anh",
          url: `${Astro.url.origin}`,
          sameAs: [LINKS.linkedin, LINKS.github],
        },
        publisher: {
          "@type": "Organization",
          name: "Anh",
          logo: {
            "@type": "ImageObject",
            url: `${Astro.url.origin}/og-image.png`,
          },
        },
        datePublished: pubDate || new Date().toISOString(),
        dateModified: pubDate || new Date().toISOString(),
      };

// Show Header on all paths except root
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="robots" content="index, follow" />
    <!-- Basic OG tags for sharing your website's content on platforms like Facebook and LinkedIn -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url.origin} />
    <meta
      property="og:image"
      content={image || `${Astro.url.origin}/og-image.png`}
    />
    <!-- Basic Twitter Card tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta
      name="twitter:image"
      content={image || `${Astro.url.origin}/og-image.png`}
    />

    <link rel="preconnect" href="https://cdn.fontshare.com" />
    {
      page === "travel" && (
        <link rel="canonical" href={`${Astro.url.origin}/travel`} />
      )
    }
    {
      page === "blog" && (
        <link rel="canonical" href={`${Astro.url.origin}/blog/${slug}`} />
      )
    }
    <script type="application/ld+json" set:html={JSON.stringify(schema)} />
  </head>
  <body class="md:h-screen flex flex-col justify-center p-4 md:p-12">
    <slot name="loader" />
    <slot />
  </body>
</html>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const logo = document.querySelector('.logo');
    const logoContainer = document.querySelector('#logo-container');
    
    logoContainer?.addEventListener('click', (e) => {
      e.preventDefault();
      const href = (e.currentTarget as HTMLAnchorElement).href;
      logo?.classList.add('spin');
      setTimeout(() => {
        window.location.href = href;
      }, 300);
    });
  });
</script>

